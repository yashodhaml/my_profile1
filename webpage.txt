view.py
from django.shortcuts import render
from mlyapp.models import mlyapp
from django.http import HttpResponse

def profile(request):
    try: 
       if request.method=='POST':
         name=(request.POST.get('n1'))
         comments=(request.POST.get('n2'))
         y=mlyapp(person_name=name,person_comment=comments)
         y.save()
    except:
        pass
    return render(request,'home.html')
    

def about(request):
    return render(request,'about.html')
    
def contact(request):
   return render(request,'contact.html')

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body bgcolor="lightcyan">
    
   <div>
    <marquee bgcolor="lightgreen"><h2>About me</h2></marquee>

    <form>
        <h3 class="table1">
            <table align="left" border="5">
                <tr>
                    <td>Name:</td>
                    <td>Yashodha ML</td>
                </tr>
                <tr>
                    <td>Email:</td>
                    <td>mlyashodha0@gamil.com</td>

                </tr>
                <tr>
                    <td>Mobile no:</td>
                    <td>7026153773</td>
                </tr>
                <tr>
                    <td>Qualification:</td>
                    <td>Msc in Computer Science</td>
                </tr>
                <tr>
                    <td>College:</td>
                    <td>Jss College of Arts,Commerce and Science,Mysore</td>
                </tr>
                <tr>
                <td>Preffered Position:</td>
                <td>Fullstack web developer</td>
                </tr>
                <tr>
                    <td>Technical skills:</td>
                    <td>html,css,sql,javascript,python,django</td>
                </tr>
                <tr>
                    <td>Trained by:</td>
                    <td>IIHT Software Solutions,Bangalore</td>
                </tr>


            </table>
        </h3>
    </form>
   </div> 
    
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/static/css/style.css">
</head>
<body class="b1">
    
     <div class="d1">
                
                <h3 class="h12">
                <a href="about" class="a1">About</a>
                <a href="contact" class="a2">contact</a>
                </h3>
    </div>
     <div class="m1">
     <marquee><h2><font color="lightgreen">Welcome to my Profile!!</font></h2></marquee>
     </div>
     <br>
    <div>
        <h1 class="t1">Hello,I am Yashodha</h1>
        <h3 class="t2">Python fullstack web developer</h3>
        <h2 class="t3">"Self-Confidence and Hardwork can give you success"</h2><br>
    <img src="/static/images/profilepc.jpg" alt="profilepc" class="y1"/>
    <br><br>
    <form method="post">
        {% csrf_token %}
     <h4 class="f1">Please comments your feedback here <br>
     name<input type="text" name="n1">
     comments<input type="text" name="n2">
     <input type="submit"> 
     </h4>
    </form>

     
    </div>
    

</body>
</html>

"""
URL configuration for Profile project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/4.2/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path
from Profile import view


urlpatterns = [
    path('admin/', admin.site.urls),
    path('',view.profile),
    path('about/',view.about),
    path('contact/',view.contact),
    
    
    
    
    
    
]


from django.db import models

class mlyapp(models.Model):
    person_name=models.CharField(max_length=10)
    person_comment=models.CharField(max_length=50)

# Create your models here.


"""
Django settings for Profile project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-aazyppp_&2)ucm^q_+4khaegewn&j9n3yi8*e$u7uzqfou019#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mlyapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Profile.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR,'template'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Profile.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATICFILES_DIRS=[
    BASE_DIR,'static'
    
]